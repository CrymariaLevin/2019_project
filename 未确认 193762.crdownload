{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "<class 'numpy.int64'>\n"
     ]
    }
   ],
   "source": [
    "import os\n",
    "import matplotlib.pyplot as plt\n",
    "import pandas\n",
    "\n",
    "df_data = pandas.read_csv(r'D:\\data\\Kaggle\\MNIST\\train.csv')\n",
    "\n",
    "train_advance = df_data.drop(df_data.columns[0,], axis=1)[:40000].values\n",
    "test_advance = df_data.drop(df_data.columns[0,], axis=1)[40000:].values\n",
    "train_labels_ad = df_data['label'][:40000].values\n",
    "test_labels_ad = df_data['label'][40000:].values\n",
    "\n",
    "train_img_array = train_advance.reshape(train_advance.shape[0], 28, 28)\n",
    "test_img_array = test_advance.reshape(test_advance.shape[0], 28, 28)\n",
    "\n",
    "print(train_labels_ad[0])\n",
    "print(type(train_labels_ad[0]))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "def save_img(array_tuple, file, name): #图片存储函数，输入图片向量矩阵, 文件路径和图片名字\n",
    "    plt.figure(name)\n",
    "    plt.imshow(array_tuple, cmap=plt.cm.binary)\n",
    "    plt.savefig('D:/data/Kaggle/MNIST/picture/{}/{}.png'.format(file, name)) #保存文件\n",
    "    \n",
    "for i in range(len(train_img_array)):\n",
    "    label = train_labels_ad[i]\n",
    "    save_img(train_img_array[i],'train/%s' %str(label), str(i))\n",
    "print('训练图像数量：', len(os.listdir(r'D:\\data\\Kaggle\\MNIST\\picture\\train')))\n",
    "    \n",
    "for i in range(len(test_img_array)):\n",
    "    label = train_labels_ad[i]\n",
    "    save_img(test_img_array[i],'test%s' %str(label), str(i))\n",
    "print('验证图像数量：', len(os.listdir(r'D:\\data\\Kaggle\\MNIST\\picture\\test')))"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
